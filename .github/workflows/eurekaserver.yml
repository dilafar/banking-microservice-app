name: EurekaServer Workflow

on:
  workflow_call:
    inputs:
      build_number:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      ACR_LOGIN_SERVER:
        required: true
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true
env:
  ACR_REPOSITORY: banking-app
  CACHE_DIR: /home/runner/work/_temp/trivy
defaults:
  run:
    shell: bash

jobs:
  eureka-server-job:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # âœ… Fixes the error
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: SERVICE_PRINCIPAL

      - name: Increment app version
        run: |
          cd eurekaserver
          echo "Incrementing app version..."
          mvn build-helper:parse-version versions:set \
              -DnewVersion=\"\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}\" \
              versions:commit
          version=$(grep -oPm1 '(?<=<version>)[^<]+' pom.xml)
          echo "IMAGE_VERSION=$version-${{ inputs.build_number }}" >> $GITHUB_ENV

      - name: Build and package
        run: |
          cd eurekaserver
          mvn clean package

      - name: Run Tests
        run: |
          cd eurekaserver
          mvn test

      - name: Start the eureka JAR
        run: |
          cd eurekaserver
          java -jar target/*.jar &
        env:
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: check Trivy
        run: trivy --help

      - name: Cache Trivy Database
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_DIR }}
          key: trivydb

      - name: Trivy Scan
        run: |
          bash trivy-docker-image-scan.sh eurekaserver/Dockerfile ${{ env.CACHE_DIR }}

      - name: Run OPA Docker Scan
        run: |
          cd eurekaserver
          docker run --rm -v $(pwd):/project openpolicyagent/conftest test --policy dockerfile-security.rego Dockerfile

      - name: Lint Dockerfile with Hadolint
        run: |
          cd eurekaserver
          docker run --rm -i hadolint/hadolint < Dockerfile | tee hadolint_eurekaserver.txt

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push Docker Image to ACR
        uses: docker/build-push-action@v5
        with:
          context: eurekaserver
          file: eurekaserver/Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:eurekaserver-v${{ env.IMAGE_VERSION }}

      - name: Trivy Scan Deployed Account Imange
        run: |
          bash trivy-k8s-scan.sh ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:eurekaserver-v${{ env.IMAGE_VERSION }} ${{ env.CACHE_DIR }} trivy-eurekaserver.json

      - name: Run CIS Docker Benchmark
        run: |
          bash trivy-docker-bench.sh ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:eurekaserver-v${{ env.IMAGE_VERSION }} trivy-bench-eurekaserver.json

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git pull origin main || true
          cp eurekaserver/hadolint_eurekaserver.txt reports/docker-lint/hadolint_eurekaserver.txt
          git add .
          git commit -m "eurekaserver microservice changes updated by GitHub Actions"
          git push origin main

